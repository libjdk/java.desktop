/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sun_awt_windows_WInputMethod */

#ifndef _Included_sun_awt_windows_WInputMethod
#define _Included_sun_awt_windows_WInputMethod
#ifdef __cplusplus
extern "C" {
#endif
#undef sun_awt_windows_WInputMethod_ATTR_INPUT
#define sun_awt_windows_WInputMethod_ATTR_INPUT 0L
#undef sun_awt_windows_WInputMethod_ATTR_TARGET_CONVERTED
#define sun_awt_windows_WInputMethod_ATTR_TARGET_CONVERTED 1L
#undef sun_awt_windows_WInputMethod_ATTR_CONVERTED
#define sun_awt_windows_WInputMethod_ATTR_CONVERTED 2L
#undef sun_awt_windows_WInputMethod_ATTR_TARGET_NOTCONVERTED
#define sun_awt_windows_WInputMethod_ATTR_TARGET_NOTCONVERTED 3L
#undef sun_awt_windows_WInputMethod_ATTR_INPUT_ERROR
#define sun_awt_windows_WInputMethod_ATTR_INPUT_ERROR 4L
#undef sun_awt_windows_WInputMethod_IME_CMODE_ALPHANUMERIC
#define sun_awt_windows_WInputMethod_IME_CMODE_ALPHANUMERIC 0L
#undef sun_awt_windows_WInputMethod_IME_CMODE_NATIVE
#define sun_awt_windows_WInputMethod_IME_CMODE_NATIVE 1L
#undef sun_awt_windows_WInputMethod_IME_CMODE_KATAKANA
#define sun_awt_windows_WInputMethod_IME_CMODE_KATAKANA 2L
#undef sun_awt_windows_WInputMethod_IME_CMODE_LANGUAGE
#define sun_awt_windows_WInputMethod_IME_CMODE_LANGUAGE 3L
#undef sun_awt_windows_WInputMethod_IME_CMODE_FULLSHAPE
#define sun_awt_windows_WInputMethod_IME_CMODE_FULLSHAPE 8L
#undef sun_awt_windows_WInputMethod_IME_CMODE_HANJACONVERT
#define sun_awt_windows_WInputMethod_IME_CMODE_HANJACONVERT 64L
#undef sun_awt_windows_WInputMethod_IME_CMODE_ROMAN
#define sun_awt_windows_WInputMethod_IME_CMODE_ROMAN 16L
#undef sun_awt_windows_WInputMethod_COMMIT_INPUT
#define sun_awt_windows_WInputMethod_COMMIT_INPUT 1L
#undef sun_awt_windows_WInputMethod_DISCARD_INPUT
#define sun_awt_windows_WInputMethod_DISCARD_INPUT 0L
/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    createNativeContext
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_sun_awt_windows_WInputMethod_createNativeContext
  (JNIEnv *, jobject);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    destroyNativeContext
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_destroyNativeContext
  (JNIEnv *, jobject, jint);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    enableNativeIME
 * Signature: (Lsun/awt/windows/WComponentPeer;IZ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_enableNativeIME
  (JNIEnv *, jobject, jobject, jint, jboolean);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    disableNativeIME
 * Signature: (Lsun/awt/windows/WComponentPeer;)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_disableNativeIME
  (JNIEnv *, jobject, jobject);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    handleNativeIMEEvent
 * Signature: (Lsun/awt/windows/WComponentPeer;Ljava/awt/AWTEvent;)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_handleNativeIMEEvent
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    endCompositionNative
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_endCompositionNative
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    setConversionStatus
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_setConversionStatus
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    getConversionStatus
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_sun_awt_windows_WInputMethod_getConversionStatus
  (JNIEnv *, jobject, jint);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    setOpenStatus
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_setOpenStatus
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    getOpenStatus
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_windows_WInputMethod_getOpenStatus
  (JNIEnv *, jobject, jint);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    setStatusWindowVisible
 * Signature: (Lsun/awt/windows/WComponentPeer;Z)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_setStatusWindowVisible
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    getNativeIMMDescription
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_awt_windows_WInputMethod_getNativeIMMDescription
  (JNIEnv *, jobject);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    getNativeLocale
 * Signature: ()Ljava/util/Locale;
 */
JNIEXPORT jobject JNICALL Java_sun_awt_windows_WInputMethod_getNativeLocale
  (JNIEnv *, jclass);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    setNativeLocale
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_windows_WInputMethod_setNativeLocale
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    openCandidateWindow
 * Signature: (Lsun/awt/windows/WComponentPeer;II)V
 */
JNIEXPORT void JNICALL Java_sun_awt_windows_WInputMethod_openCandidateWindow
  (JNIEnv *, jobject, jobject, jint, jint);

/*
 * Class:     sun_awt_windows_WInputMethod
 * Method:    isCompositionStringAvailable
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_awt_windows_WInputMethod_isCompositionStringAvailable
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
